//import java.util.regex.Pattern
//import com.android.builder.DefaultManifestParser  
import com.android.builder.core.DefaultManifestParser
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}
apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

android {
    compileSdkVersion 18
    buildToolsVersion "21.1.2"
    enforceUniquePackageName=false
    
    lintOptions{  
        abortOnError false  
    }
    
    dexOptions {  
        preDexLibraries = false  
    }
    
    packagingOptions {  
        exclude 'META-INF/DEPENDENCIES.txt'  
        exclude 'META-INF/LICENSE.txt'  
        exclude 'META-INF/NOTICE.txt'  
        exclude 'META-INF/NOTICE'  
        exclude 'META-INF/LICENSE'  
        exclude 'META-INF/DEPENDENCIES'  
        exclude 'META-INF/notice.txt'  
        exclude 'META-INF/license.txt'  
        exclude 'META-INF/dependencies.txt'  
        exclude 'META-INF/LGPL2.1'  
        exclude 'META-INF/ASL2.0'  
    }
    
    signingConfigs{  
        myConfig{  
            storeFile file("sinlov")  
            storePassword "sinlov123"  
            keyAlias "sinlov"  
            keyPassword "sinlov123"
        }  
    }
    buildTypes{  
        release{ 
            runProguard false  
            //配置单个文件这样  
            //proguardFile 'proguard.txt.txt'
            signingConfigs.myConfig  
        }  
    } 

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')      
    }
}
build.doLast {  
        def today = new Date().format('yyMMdd');  
        copy{  
            //from('build/apk')  
            from('build/outputs/apk')  
            into('output')  
            include('Learn_Camera-debug.apk')  
            rename('Learn_Camera-debug.apk','Camera-'+today+'-'+readVersion()+'-demo.apk')  
        }  
}
/**  
    *从Manifest.xml中读取版本号  
    **/  
def readVersion(){  
    def manifestParser = new DefaultManifestParser()  
    return manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile);  
}  
